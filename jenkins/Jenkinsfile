pipeline {
    agent any
    stages {
        stage('compile') {
            steps {
                git 'https://github.com/Amae69/samplejavaapp'
                sh 'mvn compile'
            }
        }
        stage('codereview') {
            steps {
                sh 'mvn -P metrics pmd:pmd'
            }
            post {
                success {
                    recordIssues sourceCodeRetention: 'LAST_BUILD', tools: [pmdParser(pattern: '**/pmd.xml')]
                }
            }
        }
        stage('unittest') {
            steps {
                sh 'mvn test'
            }
            post {
                success {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage('coverage') {
            steps {
                sh 'mvn verify || true'
            }
            post {
                always {
                    //recordCoverage(tools: [[pattern: '**/**.exec']])
                    jacoco buildOverBuild: true, deltaBranchCoverage: '20', deltaClassCoverage: '20', deltaComplexityCoverage: '20', deltaInstructionCoverage: '20', deltaLineCoverage: '20', deltaMethodCoverage: '20'
                }
            }
        }
        stage('package') {
            steps {
                sh 'mvn package'
            }
            post {
                success {
                    archiveArtifacts artifacts: 'target/*.war', followSymlinks: false
                }
            }
        }
    }
}    

//pipeline {
//    agent any
//    stages {
//        stage('compile') {
//	         steps {
//                echo 'compiling..'
//		            git url: 'https://github.com/lerndevops/samplejavaapp'
//		            sh script: '/opt/maven/bin/mvn compile'
//           }
//       }
//        stage('codereview-pmd') {
//	         steps {
//                echo 'codereview..'
//		            sh script: '/opt/maven/bin/mvn -P metrics pmd:pmd'
//           }
//	         post {
//               success {
//		             recordIssues enabledForFailure: true, tool: pmdParser(pattern: '**/target/pmd.xml')
//               }
//           }		
//        }
//        stage('unit-test') {
//	         steps {
//                echo 'unittest..'
//      	        sh script: '/opt/maven/bin/mvn test'
//                 }
//	          post {
//               success {
//                   junit 'target/surefire-reports/*.xml'
//               }
//           }			
//        }
//        stage('package') {
//	         steps {
//                echo 'package......'
//		            sh script: '/opt/maven/bin/mvn package'	
//           }		
//        }
//    }
//}
